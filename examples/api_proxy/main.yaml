main: http_server
modules: 
  - module: http_server
  - module: http_request
steps:
  - id: proxy
    use: http_request
    input:
      method: !eval main.method
      url: http://localhost:4000/login
      headers: !eval main.headers
      body: !eval main.body
  - return: 
      status_code: !eval steps.proxy.response.status_code
      body: !eval steps.proxy.response.body
      headers: !eval steps.proxy.response.headers
  # - id: router
  #   payload:
  #     url: http://localhost:3002/public
  #   condition:
  #     left: !eval main.path
  #     operator: starts_with
  #     right: /public
  #   then: !include proxy.yaml
  # - !include authorizer.yaml
  # - id: router
  #   payload:
  #     url: http://localhost:3002/private/${main.full_path}
  #   condition:
  #     assert: !eval steps.auth == true
  #   then: !include proxy.yaml
  #   else:
  #     return:
  #       status_code: 401
  #       body: {
  #         message: Unauthorized
  #       }